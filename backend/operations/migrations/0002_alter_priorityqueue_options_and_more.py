# Generated by Django 5.2.5 on 2025-08-18 09:25

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("operations", "0001_initial"),
        ("users", "0003_patientprofile"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="priorityqueue",
            options={
                "ordering": ["-priority_level", "priority_position", "created_at"],
                "verbose_name": "Priority Queue",
                "verbose_name_plural": "Priority Queues",
            },
        ),
        migrations.AlterModelOptions(
            name="queuemanagement",
            options={
                "ordering": ["department", "position_in_queue", "enqueue_time"],
                "verbose_name": "Queue Management",
                "verbose_name_plural": "Queue Management",
            },
        ),
        migrations.AddField(
            model_name="priorityqueue",
            name="department",
            field=models.CharField(
                choices=[
                    ("OPD", "Out Patient Department"),
                    ("Billing", "Billing"),
                    ("Pharmacy", "Pharmacy"),
                    ("Appointment", "Appointment"),
                ],
                default="OPD",
                help_text="Department for which the queue is managed.",
                max_length=100,
            ),
        ),
        migrations.AddField(
            model_name="priorityqueue",
            name="priority_position",
            field=models.PositiveIntegerField(
                default=0, help_text="Position in the priority queue."
            ),
        ),
        migrations.AddField(
            model_name="priorityqueue",
            name="skip_normal_queues",
            field=models.BooleanField(
                default=False,
                help_text="Indicates if the patient should be skipped from the FIFO queue.",
            ),
        ),
        migrations.AddField(
            model_name="queuemanagement",
            name="dequeue_time",
            field=models.DateTimeField(
                blank=True,
                help_text="Timestamp when the patient was removed from the queue.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="queuemanagement",
            name="enqueue_time",
            field=models.DateTimeField(
                default=django.utils.timezone.now,
                help_text="Timestamp when the patient was added to the queue.",
            ),
        ),
        migrations.AddField(
            model_name="queuemanagement",
            name="expected_patients",
            field=models.PositiveIntegerField(
                default=0, help_text="Expected number of patients in the queue."
            ),
        ),
        migrations.AddField(
            model_name="queuemanagement",
            name="finished_at",
            field=models.DateTimeField(
                blank=True, help_text="Timestamp when the queue finished.", null=True
            ),
        ),
        migrations.AddField(
            model_name="queuemanagement",
            name="notification",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="queue_management",
                to="operations.notification",
            ),
        ),
        migrations.AddField(
            model_name="queuemanagement",
            name="position_in_queue",
            field=models.PositiveIntegerField(
                default=0, help_text="Position in the queue."
            ),
        ),
        migrations.AlterField(
            model_name="priorityqueue",
            name="priority_level",
            field=models.CharField(
                choices=[
                    ("pwd", "Person With Disability"),
                    ("senior", "Senior Citizen"),
                ],
                default="senior",
                help_text="Priority level of the patient in the queue.",
                max_length=50,
            ),
        ),
        migrations.AlterUniqueTogether(
            name="queuemanagement",
            unique_together={("department", "queue_number", "patient")},
        ),
    ]
